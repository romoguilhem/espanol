<div id="navbar">
  <h1>ðŸš€ Vamos a practicar nuestro espanol ðŸš€</h1>

  <div id="navbar-buttons">
    <div class = "button"><%= link_to "Casa", root_path %></div>
    <div id="new" class="button"><%= link_to "Nouvelle Partie", new_game_path %></div>
  </div>
</div>

<div id="show-container">
  <% if @game.number_of_words == 1 %>
    <h2>Traduis le mot suivant:</h2>
  <% else %>
    <h2>Traduis les <%= @game.number_of_words %> mots suivants:</h2>
  <% end %>

  <% n = 0 %>
  <form>
    <div id="list">
      <% @translation_hashes.each do |hash| %>
        <% n += 1 %>
        <div id="word<%= n %>" style="display: flex; justify-content: space-around; ">
          <label id="french<%= n %>"><%= hash["french"].sample %></label>
          <input type="text" id="input<%= n %>" autocomplete="off"><br><br>
          <%# Trick pour rÃ©cupÃ©rer la traduction avec le js %>
          <div id="spanish<%= n %>" style="display: none; text-align: center; flex: 0.5;"><%= hash["spanish"] %></div>
        </div>
      <% end %>
    </div>

    <%# Trick pour rÃ©cupÃ©rer la taille n de la liste avec le js %>
    <div id="size" style="display: none;"><%= n %></div>

    <div id="submit-buttons">
      <input id="submit" type="submit" value="Submit" class="button">
      <div id="correction" class="button" style="display: none;" ><%= link_to "Corrige toi", correction_game_path(@game), method: :post, remote: true %></div>
    </div>
  </form>

  <div id="score"></div>
</div>


<%# Partie Javascript que je n'arrive pas Ã  mettre dans un fichier externe au HTML %>
<script>
  // Fonction pour enlever les accents
  function removeAccents(str) {
    return str.normalize('NFD').replace(/[\u0300-\u036f]/g, '');
  }

  // Fonction pour checker si l'input est correct aux accents prÃ¨s
  // A refactoriser une fois que cela marche
  function isAlmostCorrect(inputString, spanishArray) {
    let sizeMax = spanishArray.length - 1;
    for (let i = 0; i <= sizeMax; i++) {
      // S'il manque un ou plusieurs accents
      if (inputString.toLowerCase() == removeAccents(spanishArray[i])) {
        return true;
      // S'il y a un/des accent(s) mais au mauvais endroit
      } else if (removeAccents(inputString.toLowerCase()) == spanishArray[i]) {
        return true;
      };
    }
    return false;
  }

  // CrÃ©ation d'un array pour lister les rÃ©ponses fausses
  let errorsArray = [];

  // Event Listener sur le Submit
  document.addEventListener("DOMContentLoaded", function() {
    document.querySelector("form").addEventListener("submit", function(event) {
      event.preventDefault();
      // Taille de la liste
      let size = document.querySelector("#size").innerHTML;

      // On va compter les bonnes rÃ©ponses
      let point = 0;

      // On parcourt le formulaire et on va corriger les rÃ©ponses donnÃ©es
      for (let i = 1; i <= size; i++) {
        // On rÃ©cupÃ¨re la div du mot, l'input, le franÃ§ais et sa traduction
        let divWord = document.getElementById("word" + i.toString());
        let input = document.querySelector("#input" + i.toString()).value;
        let french = document.querySelector("#french" + i.toString()).innerHTML;
        let spanish = JSON.parse(document.getElementById("spanish" + i.toString()).innerHTML);
        // En le rÃ©cupÃ©rant ainsi, l'array spanish est une string
        // JSON.parse le retransforme en array

        console.log(spanish);
        console.log(spanish[0]);

        // Si la rÃ©ponse est juste
        if (spanish.includes(input.toLowerCase())) {
          divWord.style.backgroundColor = "green";
          point++; // IncrÃ©mentation

        // Si la rÃ©ponse est juste mais mauvais accent(s)
        } else if (isAlmostCorrect(input, spanish)) {
          divWord.style.backgroundColor = "orange";
          divWord.insertAdjacentHTML('beforeend', `${spanish}`);
          point++; // IncrÃ©mentation

        // Si la rÃ©ponse est fausse
        } else {
          divWord.style.backgroundColor = "red";

          // Ici le if gÃ¨re les synonymes espagnols
          if (spanish.length == 1) {
            divWord.insertAdjacentHTML('beforeend', `${spanish[0]}`);
          } else if (spanish.length == 2) {
            divWord.insertAdjacentHTML('beforeend', `${spanish[0]} o ${spanish[1]}`);
          } else if (spanish.length == 3) {
            divWord.insertAdjacentHTML('beforeend', `${spanish[0]} o ${spanish[1]} o ${spanish[2]}`);
          }

          // Et on enregistre la mauvaise rÃ©ponse pour correction
          errorsArray.push(`${french}`);
        }
      }

      // On display le rÃ©sultat
      let divScore = document.getElementById("score");

      if (point / size <= 0.5) {
        divScore.innerHTML = `Java le Hutt ferait mieux: ${point} / ${size} !`;
      } else if ((0.5 <= point / size) && (point / size < 1)) {
        divScore.innerHTML = `Pas mal Anakin: ${point} / ${size} !`;
      } else {
        divScore.innerHTML = `Parfait ${point} / ${size} ! <br>Mais nous ne t'accordons toujours pas le rang de maÃ®tre.`;
      };

      // On switch les boutons Submit et Correction
      let submitButton = getElementById("submit");
      let correctionButton = getElementById("correction");
      submitButton.style.display = "none";
      correctionButton.style.display = "block";
    });
  });

  // Event Listener sur le bouton Correction
  document.addEventListener("DOMContentLoaded", function() {
    document.getElementById("correction").addEventListener("click", function(event) {
      event.preventDefault();
      // Pour checker la tÃªte de l'array dans la console
      console.log(errorsArray);
      fetch("/games/correction", {
        // On renvoie l'errorsArray au backend pour crÃ©er une nouvelle game avec les traductions erronÃ©es
        method: "POST",
        headers: {
          "Content-Type": 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').content
        },
        body: JSON.stringify({ errors_array: errorsArray }),
      })
      .then(response => {
        if (!response.ok) {
          // Check si quelque chose merde
          console.error('Erreur lors de la requÃªte:', response.status, response.statusText);
          throw new Error('Erreur lors de l\'envoi de l\'array au back-end');
        }
        // On rÃ©cupÃ¨re l'url voulu avec la rÃ©ponse du back-end et on redirige
        console.log(response.url);
        window.location.href = response.url;
      })
      .then(data => {
        // Ici la partie data ne sert Ã  rien car rien n'est retournÃ© sur la page actuelle, on part vers une nouvelle show avec le bouton correction.

        // Controle de la data
        // console.log(data);
      })
      .catch(error => {
        console.error('Erreur: ', error);
      });
    });
  });
</script>
